{"version":3,"sources":["diplomaform/screens/reused/question.cljs"],"mappings":"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","names":["diplomaform.screens.reused.question/id-atom","cljs.core.atom","diplomaform.screens.reused.question/text","counter","diplomaform.screens.reused.question/radio","props","iter__4622__auto__","s__64958","cljs.core/LazySeq","temp__5753__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4620__auto__","size__4621__auto__","cljs.core/count","b__64960","cljs.core/chunk-buffer","i__64959","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__64957","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","i","key","id","res","cljs.core/deref","cljs.core/contains?","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/conj","cljs.core/merge","diplomaform.screens.reused.question/checkbox","s__64962","b__64964","i__64963","iter__64961","diplomaform.screens.reused.question/question","cljs.core._EQ_","cljs.core/chunk-first"],"sourcesContent":["(ns diplomaform.screens.reused.question)\n\n(def id-atom (atom {}))\n\n(defn text [counter]\n  [:div {:class \"form-group\"}\n   [:input\n    {:type \"text\" :class \"form-control\"\n     :id (str counter)}]])\n\n(defn radio [counter props]\n  (for [i (:values props)\n        :let [key counter\n              id (str i counter)\n              res (if (contains? @id-atom key)\n                    (swap! id-atom update-in [key] conj id)\n                    (swap! id-atom merge {key [id]}))]]\n    [:div {:class \"form-check\"}\n     [:input\n      {:id id\n       :type \"radio\"\n       :class \"form-check-input\"\n       :name (str (:question props))}]\n     [:label {:class \"form-check-label\"}\n      (str i)]\n     [:br]]))\n\n\n(defn checkbox [counter props]\n  (for [i (:values props)\n        :let [key counter\n              id (str i counter)\n              res (if (contains? @id-atom key)\n                    (swap! id-atom update-in [key] conj id)\n                    (swap! id-atom merge {key [id]}))]]\n    [:div {:class \"form-check\"}\n     [:input\n      {:type \"checkbox\"\n       :class \"form-check-input\"}]\n     [:label {:class \"form-check-label\"} (str i)]\n     [:br]]))\n\n(defn question [props counter]\n  [:div {:class \"container\"}\n   [:h5 (str (:question props) (when (= (:required props) true) \" *\"))]\n   [:form\n    (when (= (:type props) (str \"free-text\")) (text counter))\n    (when (= (:type props) (str \"single-choice\")) (radio counter props))\n    (when (= (:type props) (str \"multiple-choice\")) (checkbox counter props))]])\n\n\n"]}